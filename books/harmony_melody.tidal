
-- scale
-- scale :: Num a => Pattern String -> Pattern Int -> Pattern a
-- スケールを設定できる
d1 $ slow 2 $ n (scale "major" "0 .. 7") # sound "superpiano"

-- 下記の関数で種類を確認できる

scaleList

{--
minPent majPent ritusen egyptian kumai hirajoshi iwato chinese indian pelog prometheus scriabin gong shang jiao zhi yu whol
e wholetone augmented augmented2 hexMajor7 hexDorian hexPhrygian hexSus hexMajor6 hexAeolian major ionian dorian phrygian ly
dian mixolydian aeolian minor locrian harmonicMinor harmonicMajor melodicMinor melodicMinorDesc melodicMajor bartok hindu to
di purvi marva bhairav ahirbhairav superLocrian romanianMinor hungarianMinor neapolitanMinor enigmatic spanish leadingWhole
lydianMinor neapolitanMajor locrianMajor diminished octatonic diminished2 octatonic2 messiaen1 messiaen2 messiaen3 messiaen4
 messiaen5 messiaen6 messiaen7 chromatic bayati hijaz sikah rast saba iraq"
--}

-- toScale
-- toScale :: Num a => [a] -> Pattern Int -> Pattern a
-- スケールを作成することができる
d1 $ n (toScale [0,2,3,5,7,8,14] "0 1 2 3 4 5 6 7") # sound "superpiano"


-- arpg
-- arpg :: Pattern a -> Pattern a
-- アルペジオを弾ける。'をつけないといけない。
d1 $ n (arpg "'major7") # sound "superpiano"

-- arp
-- arp :: Pattern String -> Pattern a -> Pattern a 
-- アルペジオをひく方向を設定する
d1 $ n (arp "<up down diverge>" "<a'm9'8 e'7sus4'8>") # sound "superpiano"

-- 種類は下記の通り
{--
up down updown downup up&down down&up converge
diverge disconverge pinkyup pinkyupdown
thumbup thumbupdown
--}

-- コードの種類は下記の関数で確認できる

import Sound.Tidal.Chords

chordList

{--
major maj minor min aug dim major7 maj7 dom7 minor7 min7 dim7 one 1 five 5 plus sharp5 msharp5 sus2 sus4 six 6 m6 sevenSus2
 7sus2 sevenSus4 7sus4 sevenFlat5 7f5 m7flat5 m7f5 sevenSharp5 7s5 m7sharp5 m7s5 nine m9 m7sharp9 m7s9 maj9 nineSus4 ninesus
4 9sus4 sixby9 6by9 m6by9 sevenFlat9 7f9 m7flat9 m7f9 sevenFlat10 7f10 nineSharp5 9s5 m9sharp5 m9s5 sevenSharp5flat9 7s5f9 m
7sharp5flat9 eleven 11 m11 maj11 elevenSharp 11s m11sharp m11s thirteen 13 m13
--}
